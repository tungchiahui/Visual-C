//1，三角形判断

#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
int main()
{
	int a, b, c, d;
		scanf("%d %d %d",&a,&b,&c);
		if ((a + b > c) && (a + c > b) && (b + c > a))
		{
			if (a == b && b == c && c == a)
				printf("1\n");
        //else if ((a==b&&a!=c&&b!=c) || (a==c&&a!=b&&b!=c) || (b==c&&b!=a&&c!=a))
			else if(a==b||b==c||c==a)                  //因为if已经是检验等边了，所以等边在此式子中已经不检验了。
				printf("2\n");
			else
				printf("3\n");
		}
		else
			printf("0\n");
		return 0;
}	

//2，an=n，等差数列求和

#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
int main()
{
	int n = 1, m = 0;
	scanf("%d", &n);
	m = n + n * (n - 1) / 2;
	printf("%d", m);
	return 0;
}


//2，等差数列求和。

#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
int main()
{
	int n,m,y;
	y = 0;
	scanf("%d", &n);
	for (m = 0; m <= n; m++)
	{
		y += m;
	}
	return 0;
}

//3，1！+2！+3！+... ...+n！=？

#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
fac(int x)
{
	long int i, y;
	y = 1;
	for (i = 1; i < x+1; i++)
	{
		y = y * i;
	}
	return y;
}
int main()
{
	long int i, x, y;
	y = 0;
	scanf("%d", &x);
	for (i = 1; i < x + 1; i++)
	{
		y = y + fac(i);
	}
	printf("%d", y);
	return 0;
}


//5,

#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
int main()
{
    int a[10];
    int i, j, t;
    for (i = 0; i <= 9; i++)
        scanf("%d", &a[i]);
    for (i = 0; i <= 8; i++)
        for (j = i + 1; j <= 9; j++)
            if (a[i] > a[j])
            {
                t = a[i];
                a[i] = a[j];
                a[j] = t;
            }
    for (i = 0; i <= 9; i++)
        printf("%d\t", a[i]);
    return 0;
}
